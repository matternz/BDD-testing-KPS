apply plugin: 'java'

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'kps', 'src/test/resources']
        }
    }
}

dependencies {
    compile 'com.google.code.findbugs:jsr305:1.3.9'
    testCompile 'io.cucumber:cucumber-java:2.4.0'
    testCompile 'io.cucumber:cucumber-junit:2.4.0'

    testCompile 'junit:junit:4.12'
}

repositories {
    mavenCentral()
}



//from https://stackoverflow.com/questions/11696521/how-to-pass-arguments-from-command-line-to-gradle
// this method creates a command line arguments
def setCommandLineArguments(commandLineArgs) {
    // remove spaces 
    def arguments = commandLineArgs.tokenize()

            // create a string that can be used by Eval 
            def cla = "["
            // go through the list to get each argument
            arguments.each {
                    cla += "'" + "${it}" + "',"
            }

    // remove last "," add "]" and set the args 
    return cla.substring(0, cla.lastIndexOf(',')) + "]"
}

def setupCommandLineArguments() {
    if ( project.hasProperty("arg") ) { return setCommandLineArguments(arg) }
    return "[ ]"
}

//try  gradle run -Parg="data/data.xml /dev/null"  to run server
task run() {
    dependsOn assemble
    doLast {
            javaexec {
            main = "App"
            classpath = sourceSets.main.output
	    args = Eval.me( setupCommandLineArguments() )
        }
    }
}

